"use strict";(self.webpackChunkaiconfig_docs=self.webpackChunkaiconfig_docs||[]).push([[9962],{7145:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>g,frontMatter:()=>l,metadata:()=>d,toc:()=>p});var a=t(5893),i=t(1151),o=t(4866),r=t(5162),s=t(4883);const l={sidebar_position:2},c="Getting Started",d={id:"introduction/getting-started",title:"Getting Started",description:"Please read AIConfig Basics to understand the motivation behind storing prompts and model parameters as configs, and what it enables.",source:"@site/docs/introduction/getting-started.md",sourceDirName:"introduction",slug:"/introduction/getting-started",permalink:"/aiconfig/docs/introduction/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/lastmile-ai/aiconfig/aiconfig-docs/docs/introduction/getting-started.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docSidebar",previous:{title:"What is AIConfig",permalink:"/aiconfig/docs/introduction/basics"},next:{title:"Basic Structure",permalink:"/aiconfig/docs/introduction/basic-structure"}},u={},p=[{value:"Installation",id:"installation",level:2},{value:"Node.js (TypeScript)",id:"nodejs-typescript",level:3},{value:"Python",id:"python",level:3},{value:"Quickstart",id:"quickstart",level:2},{value:"Your first AIConfig",id:"your-first-aiconfig",level:3},{value:"Stream outputs",id:"stream-outputs",level:3},{value:"Prompt and model chains",id:"prompt-and-model-chains",level:3},{value:"Saving the AIConfig",id:"saving-the-aiconfig",level:3},{value:"AI Workbook playground",id:"ai-workbook-playground",level:2},{value:"Using OpenAI API introspection",id:"using-openai-api-introspection",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["Please read ",(0,a.jsx)(n.a,{href:"/docs/introduction/basics",children:"AIConfig Basics"})," to understand the motivation behind storing prompts and model parameters as configs, and what it enables."]})}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsxs)(n.a,{href:"/docs/overview/ai-config-format",children:[(0,a.jsx)(n.code,{children:"aiconfig"})," file format"]})," is best used with the AIConfig SDK. To install the SDK, use your favorite package manager:"]}),"\n",(0,a.jsx)(n.h3,{id:"nodejs-typescript",children:"Node.js (TypeScript)"}),"\n",(0,a.jsxs)(o.Z,{groupId:"package-manager",queryString:!0,defaultValue:s.Z.defaultNodePackageManager,values:s.Z.nodePackageManagers,children:[(0,a.jsx)(r.Z,{value:"npm",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ npm install aiconfig\n"})})}),(0,a.jsx)(r.Z,{value:"yarn",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ yarn add aiconfig\n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"python",children:"Python"}),"\n",(0,a.jsxs)(o.Z,{groupId:"package-manager",queryString:!0,defaultValue:s.Z.defaultPythonPackageManager,values:s.Z.pythonPackageManagers,children:[(0,a.jsx)(r.Z,{value:"pip",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ pip install python-aiconfig\n"})})}),(0,a.jsx)(r.Z,{value:"poetry",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ poetry add python-aiconfig\n"})})})]}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.p,{children:["Make sure to specify the API keys (such as ",(0,a.jsx)(n.code,{children:"OPENAI_API_KEY"}),") in your environment before proceeding."]})}),"\n",(0,a.jsx)(n.h2,{id:"quickstart",children:"Quickstart"}),"\n",(0,a.jsx)(n.h3,{id:"your-first-aiconfig",children:"Your first AIConfig"}),"\n",(0,a.jsxs)(n.p,{children:["Suppose we have a series of prompts to help us plan a trip. We can model them with this ",(0,a.jsx)(n.code,{children:"aiconfig"}),":"]}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:(0,a.jsx)(n.code,{children:"travel.aiconfig.json"})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "name": "NYC Trip Planner",\n  "description": "Intrepid explorer with ChatGPT and AIConfig",\n  "schema_version": "latest",\n  "metadata": {\n    "models": {\n      "gpt-3.5-turbo": {\n        "model": "gpt-3.5-turbo",\n        "top_p": 1,\n        "temperature": 1\n      },\n      "gpt-4": {\n        "model": "gpt-4",\n        "max_tokens": 3000,\n        "system_prompt": "You are an expert travel coordinator with exquisite taste."\n      }\n    },\n    "default_model": "gpt-3.5-turbo"\n  },\n  "prompts": [\n    {\n      "name": "get_activities",\n      "input": "Tell me 10 fun attractions to do in NYC."\n    },\n    {\n      "name": "gen_itinerary",\n      "input": "Generate an itinerary ordered by {{order_by}} for these activities: {{get_activities.output}}.",\n      "metadata": {\n        "model": "gpt-4",\n        "parameters": {\n          "order_by": "geographic location"\n        }\n      }\n    }\n  ]\n}\n'})})]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["Don't worry if you don't understand all parts of this yet, we'll go over it in steps. We will also cover a prompt editor (",(0,a.jsx)(n.a,{href:"#ai-workbook-playground",children:"AI Workbooks"}),") to help you create AIConfigs visually."]})}),"\n",(0,a.jsxs)(n.p,{children:["To get started, let's use this ",(0,a.jsx)(n.code,{children:"aiconfig"})," in application code to run the ",(0,a.jsx)(n.code,{children:"get_activities"})," prompt:"]}),"\n",(0,a.jsxs)(o.Z,{groupId:"aiconfig-language",queryString:!0,defaultValue:s.Z.defaultAIConfigLanguage,values:s.Z.aiConfigLanguages,children:[(0,a.jsx)(r.Z,{value:"node",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="app.ts"',children:'import * as path from "path";\nimport { AIConfigRuntime, InferenceOptions } from "aiconfig";\n\nasync function travelWithGPT() {\n  // Load the AIConfig. You can also use AIConfigRuntime.loadJSON({})\n  const aiConfig = AIConfigRuntime.load(\n    path.join(__dirname, "travel.aiconfig.json")\n  );\n\n  // Run a single prompt\n  await aiConfig.run("get_activities");\n}\n'})})}),(0,a.jsx)(r.Z,{value:"python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="app.py"',children:"from aiconfig import AIConfigRuntime, InferenceOptions\n\n# Load the aiconfig. You can also use AIConfigRuntime.loadJSON({})\nconfig = AIConfigRuntime.load('travel.aiconfig.json')\n\n# Run a single prompt\nawait config.run(\"get_activities\", params=None)\n"})})})]}),"\n",(0,a.jsx)(n.p,{children:"That's it! You don't need to worry about how to run inference for the model; it's all handled by AIConfig."}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["In this case, ",(0,a.jsx)(n.code,{children:"get_activities"})," is run with ",(0,a.jsx)(n.strong,{children:"gpt-3.5-turbo"}),", since that is the ",(0,a.jsx)(n.code,{children:"default_model"})," for this AIConfig."]})}),"\n",(0,a.jsx)(n.h3,{id:"stream-outputs",children:"Stream outputs"}),"\n",(0,a.jsx)(n.p,{children:"Now let's add streaming to the above example."}),"\n",(0,a.jsxs)(o.Z,{groupId:"aiconfig-language",queryString:!0,defaultValue:s.Z.defaultAIConfigLanguage,values:s.Z.aiConfigLanguages,children:[(0,a.jsx)(r.Z,{value:"node",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="app.ts"',children:'import * as path from "path";\nimport { AIConfigRuntime, InferenceOptions } from "aiconfig";\n\nasync function travelWithGPT() {\n  // Alternatively, you can use AIConfigRuntime.loadJSON({/*travel.aiconfig.json contents*/})\n  const aiConfig = AIConfigRuntime.load(\n    path.join(__dirname, "travel.aiconfig.json")\n  );\n\n  const options: InferenceOptions = {\n    callbacks: {\n      streamCallback: (data: any, _acc: any, _idx: any) => {\n        // Write streamed content to console\n        process.stdout.write(data?.content || "\\n");\n      },\n    },\n  };\n\n  // Run a single prompt\n  await aiConfig.run("get_activities", /*params*/ undefined, options);\n}\n'})})}),(0,a.jsx)(r.Z,{value:"python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:'title="app.py"',children:"from aiconfig import AIConfigRuntime, InferenceOptions\n\n# Load the aiconfig. You can also use AIConfigRuntime.loadJSON({})\nconfig = AIConfigRuntime.load('travel.aiconfig.json')\n\n# Run a single prompt (with streaming)\ninference_options = InferenceOptions(stream=True)\nawait config.run(\"get_activities\", params=None, inference_options)\n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"prompt-and-model-chains",children:"Prompt and model chains"}),"\n",(0,a.jsxs)(n.p,{children:["Let's take a closer look at the ",(0,a.jsx)(n.code,{children:"gen_itinerary"})," prompt above:"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Prompt input:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'"Generate an itinerary ordered by {{order_by}} for these activities: {{get_activities.output}}."\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Prompt metadata:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "metadata": {\n    "model": "gpt-4",\n    "parameters": {\n      "order_by": "geographic location"\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Notice a few interesting things:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["The prompt depends on the output of the ",(0,a.jsx)(n.code,{children:"get_activities"})," prompt."]}),"\n",(0,a.jsxs)(n.li,{children:["It also depends on an ",(0,a.jsx)(n.code,{children:"order_by"})," parameter"]}),"\n",(0,a.jsxs)(n.li,{children:["It uses ",(0,a.jsx)(n.strong,{children:"gpt-4"}),", whereas the ",(0,a.jsx)(n.code,{children:"get_activities"})," prompt it depends on uses ",(0,a.jsx)(n.strong,{children:"gpt-3.5-turbo"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Effectively, this is a prompt chain between ",(0,a.jsx)(n.code,{children:"gen_itinerary"})," and ",(0,a.jsx)(n.code,{children:"get_activities"})," prompts, ",(0,a.jsx)(n.em,{children:"as well as"})," as a model chain between ",(0,a.jsx)(n.code,{children:"gpt-3.5-turbo"})," and ",(0,a.jsx)(n.code,{children:"gpt-4"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Let's run this with AIConfig:"}),"\n",(0,a.jsxs)(o.Z,{groupId:"aiconfig-language",queryString:!0,defaultValue:s.Z.defaultAIConfigLanguage,values:s.Z.aiConfigLanguages,children:[(0,a.jsxs)(r.Z,{value:"node",children:[(0,a.jsxs)(n.p,{children:["Replace the ",(0,a.jsx)(n.code,{children:"aiconfig.run"})," call above with this:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'// Run a prompt chain, with data passed in as params\n// This will first run get_activities with GPT-3.5, and\n// then use its output to run the gen_itinerary using GPT-4\nawait aiConfig.runWithDependencies(\n  "gen_itinerary",\n  /*params*/ { order_by: "duration" },\n  options\n);\n'})})]}),(0,a.jsxs)(r.Z,{value:"python",children:[(0,a.jsxs)(n.p,{children:["Replace ",(0,a.jsx)(n.code,{children:"config.run"})," above with this:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'inference_options = InferenceOptions(stream=True)\nawait config.run_with_dependencies(\n    "gen_itinerary",\n    params={"order_by": "duration"},\n    inference_options)\n'})})]})]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"Just notice how simple the syntax is to perform a fairly complex task - running 2 different prompts across 2 different models and chaining one's output as part of the input of another."})}),"\n",(0,a.jsx)(n.h3,{id:"saving-the-aiconfig",children:"Saving the AIConfig"}),"\n",(0,a.jsx)(n.p,{children:"Finally, let's save the AIConfig back to disk, and serialize the outputs from the latest inference run as well:"}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["The AIConfig SDK supports ",(0,a.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Create,_read,_update_and_delete",children:"CRUD"})," operations for prompts, models, parameters, and arbitrary metadata in the ",(0,a.jsx)(n.code,{children:"aiconfig"}),". For more details, see the ",(0,a.jsx)(n.a,{href:"/docs/category/sdk",children:"SDK Overview"}),"."]})}),"\n",(0,a.jsxs)(o.Z,{groupId:"aiconfig-language",queryString:!0,defaultValue:s.Z.defaultAIConfigLanguage,values:s.Z.aiConfigLanguages,children:[(0,a.jsx)(r.Z,{value:"node",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'// Save the AIConfig to disk, and serialize outputs from the model run\naiConfig.save(\n  "updated.aiconfig.json",\n  /*saveOptions*/ { serializeOutputs: true }\n);\n'})})}),(0,a.jsx)(r.Z,{value:"python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# Save the aiconfig to disk. and serialize outputs from the model run\nconfig.save('updated.aiconfig.json', include_output=True)\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"ai-workbook-playground",children:"AI Workbook playground"}),"\n",(0,a.jsxs)(n.p,{children:["We can iterate on an ",(0,a.jsx)(n.code,{children:"aiconfig"})," using a notebook-like editor called an ",(0,a.jsx)(n.strong,{children:"AI Workbook"}),". Now that we have an ",(0,a.jsx)(n.code,{children:"aiconfig"})," file artifact that encapsulates the generative AI part of our application, the application code doesn't need to change even as the ",(0,a.jsx)(n.code,{children:"aiconfig"})," is updated."]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["We are currently working on a local editor that you can run yourself. For now, please use the hosted version on ",(0,a.jsx)(n.a,{href:"https://lastmileai.dev",children:"https://lastmileai.dev"}),"."]})}),"\n",(0,a.jsx)("video",{controls:!0,children:(0,a.jsx)("source",{src:"https://s3.amazonaws.com/publicdata.lastmileai.com/workbook_editor_480.mov"})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["Try out this workbook yourself here: ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"https://lastmileai.dev/workbooks/clooqs3p200kkpe53u6n2rhr9",children:"NYC Travel Workbook"})})]})}),"\n",(0,a.jsx)(n.h2,{id:"using-openai-api-introspection",children:"Using OpenAI API introspection"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{})})]})}function g(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},4883:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(412);const i=!!a.Z.canUseDOM&&navigator.platform.startsWith("Mac"),o=!!a.Z.canUseDOM&&navigator.platform.startsWith("Win"),r={defaultOs:i?"macos":o?"windows":"linux",defaultNodePackageManager:"npm",defaultPythonPackageManager:"pip",defaultPlatform:i?"ios":"android",defaultSyntax:"functional",defaultAIConfigLanguage:"python",getDevNotesTabs:function(e){return void 0===e&&(e=["android","ios","web","windows"]),[e.includes("android")?{label:"Android",value:"android"}:void 0,e.includes("ios")?{label:"iOS",value:"ios"}:void 0,e.includes("web")?{label:"Web",value:"web"}:void 0,e.includes("windows")?{label:"Windows",value:"windows"}:void 0].filter(Boolean)},oses:[{label:"macOS",value:"macos"},{label:"Windows",value:"windows"},{label:"Linux",value:"linux"}],nodePackageManagers:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],pythonPackageManagers:[{label:"pip",value:"pip"},{label:"poetry",value:"poetry"}],platforms:[{label:"Android",value:"android"},{label:"iOS",value:"ios"}],aiConfigLanguages:[{label:"Node.js (TypeScript)",value:"node"},{label:"Python",value:"python"}]}},5162:(e,n,t)=>{t.d(n,{Z:()=>r});t(7294);var a=t(6010);const i={tabItem:"tabItem_Ymn6"};var o=t(5893);function r(e){let{children:n,hidden:t,className:r}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,a.Z)(i.tabItem,r),hidden:t,children:n})}},4866:(e,n,t)=>{t.d(n,{Z:()=>w});var a=t(7294),i=t(6010),o=t(2466),r=t(6550),s=t(469),l=t(1980),c=t(7392),d=t(12);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:i}}=e;return{value:n,label:t,attributes:a,default:i}}))}(t);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const i=(0,r.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l._X)(o),(0,a.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(i.location.search);n.set(o,e),i.replace({...i.location,search:n.toString()})}),[o,i])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,o=p(e),[r,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:o}))),[c,u]=g({queryString:t,groupId:i}),[f,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,o]=(0,d.Nk)(t);return[i,(0,a.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:i}),v=(()=>{const e=c??f;return h({value:e,tabValues:o})?e:null})();(0,s.Z)((()=>{v&&l(v)}),[v]);return{selectedValue:r,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),m(e)}),[u,m,o]),tabValues:o}}var m=t(2389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(5893);function j(e){let{className:n,block:t,selectedValue:a,selectValue:r,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),i=s[t].value;i!==a&&(c(n),r(i))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},n),children:s.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>l.push(e),onKeyDown:u,onClick:d,...o,className:(0,i.Z)("tabs__item",v.tabItem,o?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function b(e){let{lazy:n,children:t,selectedValue:i}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function y(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,i.Z)("tabs-container",v.tabList),children:[(0,x.jsx)(j,{...e,...n}),(0,x.jsx)(b,{...e,...n})]})}function w(e){const n=(0,m.Z)();return(0,x.jsx)(y,{...e,children:u(e.children)},String(n))}},1151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>r});var a=t(7294);const i={},o=a.createContext(i);function r(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);